import { Component } from 'react';
import { ComponentWrapper } from './ComponentWrapper';
import { DiagramPartWrapper } from './DiagramPartWrapper';
import { Engine } from './Engine';
import { EditPolicy } from './EditPolicy';
import { Intent, Id } from './typings';
export declare function matchesSingleType(type: Id): (wrapper: ComponentWrapper) => boolean;
export declare function matchesMultiTypes(types: Id[]): (wrapper: ComponentWrapper) => boolean;
export declare function matchesSinglePart(partId: Id): (part: DiagramPartWrapper) => boolean;
export declare function matchesMultiParts(partIds: Id[]): (part: DiagramPartWrapper) => boolean;
export declare function alwaysTrue(): true;
export declare function getSelection(engine: Engine): Component[];
export declare function typeMatches(types: Id | Id[]): (wrapper: ComponentWrapper) => boolean;
export declare function partMatches(ids: Id[]): (part: DiagramPartWrapper) => boolean;
export declare const perform: (policies: EditPolicy[], intent: Intent) => void;
export declare const requestFeedback: (policies: EditPolicy[], intent: Intent) => void;
export declare const eraseFeedback: (policies: EditPolicy[], intent: Intent) => void;
export declare function getParts(engine: Engine, ids?: Id[]): DiagramPartWrapper[];
export declare function isLeftButton(e: MouseEvent & any): boolean;
